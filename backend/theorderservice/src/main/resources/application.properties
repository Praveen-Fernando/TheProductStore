server.port=8081

# Database Configuration
spring.datasource.url=  jdbc:mysql://localhost:3306/productstoredb?useSSL=false
spring.datasource.username= root
spring.datasource.password= root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT Configuration
jwt.secret=843567893696976453275974432697R634976R738467TR678T34865R6834R8763T478378637664538745673865783678548735687R3
jwt.expiration-time=3600000
jwt.token-prefix=Bearer
jwt.header-string=Authorization

#multipart.enabled=true
#spring.http.multipart.max-file-size=500000KB
#spring.http.multipart.max-request-size=500000KB

# Logs
#handlers= java.util.logging.ConsoleHandler, java.util.logging.FileHandler
#java.util.logging.ConsoleHandler.level = INFO
#java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.level = INFO
#java.util.logging.FileHandler.pattern = logs/app.log
#java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter


# Kafka Configurations
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Topic Name
kafka.topic.order=order-topic
